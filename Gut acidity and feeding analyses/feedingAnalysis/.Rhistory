setwd("~/Desktop/rstudio-export/Materiales Sesiones/1.IntroduccionR")
getwd()
setwd("~/")
load("/home/mcoronado/WORK/llew/Dmelanogaster_Copper/feedingAnalysis/data.R.RData")
for (exp in exps) {
for (strain_tolerant in strains_tolerant) {
for (strain_sensitive in strains_sensitive) {
contingency_table <- read.table(paste0(strain_tolerant,"_vs_",strain_sensitive,".",exp,".tab"), row.names = 1, sep = "\t")
contingency_table <- contingency_table %>%
row_to_names(row_number = 1)
contingency_table<-mutate_all(contingency_table, function(x) as.numeric(as.character(x)))
print(chisq.test(contingency_table))
print(chisq.posthoc.test(contingency_table))
kk<-chisq.posthoc.test(contingency_table)
kk[kk$Value=="p values",c(3,4)] <- lapply(kk[kk$Value=="p values",c(3,4)], function(x) (p.adjust(x,method="bonferroni",n=54)))
#write.table(kk,"result_pairs_chisq.posthoc.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
table_comp<-data.frame(paste0(strain_tolerant," vs ",strain_sensitive," - ",exp),chisq.test(contingency_table)[c(1,3)])
colnames(table_comp)  <- c("Comparison","X-squared","p-value")
table_comp$`X-squared`  <- signif(table_comp$`X-squared`, digits=3)
table_comp$`p-value`  <- signif(table_comp$`p-value`, digits=3)
table_comp$`p-value` <- p.adjust(table_comp$`p-value`,method="bonferroni",n=9)
write.table(table_comp,"result_pairs_chisq.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
}
}
}
setwd("~/WORK/llew/Dmelanogaster_Copper/gutAcidityAnalysis")
for (exp in exps) {
for (strain_tolerant in strains_tolerant) {
for (strain_sensitive in strains_sensitive) {
contingency_table <- read.table(paste0(strain_tolerant,"_vs_",strain_sensitive,".",exp,".tab"), row.names = 1, sep = "\t")
contingency_table <- contingency_table %>%
row_to_names(row_number = 1)
contingency_table<-mutate_all(contingency_table, function(x) as.numeric(as.character(x)))
print(chisq.test(contingency_table))
print(chisq.posthoc.test(contingency_table))
kk<-chisq.posthoc.test(contingency_table)
kk[kk$Value=="p values",c(3,4)] <- lapply(kk[kk$Value=="p values",c(3,4)], function(x) (p.adjust(x,method="bonferroni",n=54)))
#write.table(kk,"result_pairs_chisq.posthoc.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
table_comp<-data.frame(paste0(strain_tolerant," vs ",strain_sensitive," - ",exp),chisq.test(contingency_table)[c(1,3)])
colnames(table_comp)  <- c("Comparison","X-squared","p-value")
table_comp$`X-squared`  <- signif(table_comp$`X-squared`, digits=3)
table_comp$`p-value`  <- signif(table_comp$`p-value`, digits=3)
table_comp$`p-value` <- p.adjust(table_comp$`p-value`,method="bonferroni",n=9)
write.table(table_comp,"result_pairs_chisq.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
}
}
}
strains_tolerant <- c("GIM-012", "MUN-020", "MUN-008")
strains_sensitive <- c("AKA-018", "COR-018", "JUT-008")
exps <- c("treated","control")
for (exp in exps) {
for (strain_tolerant in strains_tolerant) {
for (strain_sensitive in strains_sensitive) {
contingency_table <- read.table(paste0(strain_tolerant,"_vs_",strain_sensitive,".",exp,".tab"), row.names = 1, sep = "\t")
contingency_table <- contingency_table %>%
row_to_names(row_number = 1)
contingency_table<-mutate_all(contingency_table, function(x) as.numeric(as.character(x)))
print(chisq.test(contingency_table))
print(chisq.posthoc.test(contingency_table))
kk<-chisq.posthoc.test(contingency_table)
kk[kk$Value=="p values",c(3,4)] <- lapply(kk[kk$Value=="p values",c(3,4)], function(x) (p.adjust(x,method="bonferroni",n=54)))
#write.table(kk,"result_pairs_chisq.posthoc.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
table_comp<-data.frame(paste0(strain_tolerant," vs ",strain_sensitive," - ",exp),chisq.test(contingency_table)[c(1,3)])
colnames(table_comp)  <- c("Comparison","X-squared","p-value")
table_comp$`X-squared`  <- signif(table_comp$`X-squared`, digits=3)
table_comp$`p-value`  <- signif(table_comp$`p-value`, digits=3)
table_comp$`p-value` <- p.adjust(table_comp$`p-value`,method="bonferroni",n=9)
write.table(table_comp,"result_pairs_chisq.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
}
}
}
library(dplyr)
for (exp in exps) {
for (strain_tolerant in strains_tolerant) {
for (strain_sensitive in strains_sensitive) {
contingency_table <- read.table(paste0(strain_tolerant,"_vs_",strain_sensitive,".",exp,".tab"), row.names = 1, sep = "\t")
contingency_table <- contingency_table %>%
row_to_names(row_number = 1)
contingency_table<-mutate_all(contingency_table, function(x) as.numeric(as.character(x)))
print(chisq.test(contingency_table))
print(chisq.posthoc.test(contingency_table))
kk<-chisq.posthoc.test(contingency_table)
kk[kk$Value=="p values",c(3,4)] <- lapply(kk[kk$Value=="p values",c(3,4)], function(x) (p.adjust(x,method="bonferroni",n=54)))
#write.table(kk,"result_pairs_chisq.posthoc.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
table_comp<-data.frame(paste0(strain_tolerant," vs ",strain_sensitive," - ",exp),chisq.test(contingency_table)[c(1,3)])
colnames(table_comp)  <- c("Comparison","X-squared","p-value")
table_comp$`X-squared`  <- signif(table_comp$`X-squared`, digits=3)
table_comp$`p-value`  <- signif(table_comp$`p-value`, digits=3)
table_comp$`p-value` <- p.adjust(table_comp$`p-value`,method="bonferroni",n=9)
write.table(table_comp,"result_pairs_chisq.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
}
}
}
librayr(plyr)
library(plyr)
library(tidyr)
for (exp in exps) {
for (strain_tolerant in strains_tolerant) {
for (strain_sensitive in strains_sensitive) {
contingency_table <- read.table(paste0(strain_tolerant,"_vs_",strain_sensitive,".",exp,".tab"), row.names = 1, sep = "\t")
contingency_table <- contingency_table %>%
row_to_names(row_number = 1)
contingency_table<-mutate_all(contingency_table, function(x) as.numeric(as.character(x)))
print(chisq.test(contingency_table))
print(chisq.posthoc.test(contingency_table))
kk<-chisq.posthoc.test(contingency_table)
kk[kk$Value=="p values",c(3,4)] <- lapply(kk[kk$Value=="p values",c(3,4)], function(x) (p.adjust(x,method="bonferroni",n=54)))
#write.table(kk,"result_pairs_chisq.posthoc.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
table_comp<-data.frame(paste0(strain_tolerant," vs ",strain_sensitive," - ",exp),chisq.test(contingency_table)[c(1,3)])
colnames(table_comp)  <- c("Comparison","X-squared","p-value")
table_comp$`X-squared`  <- signif(table_comp$`X-squared`, digits=3)
table_comp$`p-value`  <- signif(table_comp$`p-value`, digits=3)
table_comp$`p-value` <- p.adjust(table_comp$`p-value`,method="bonferroni",n=9)
write.table(table_comp,"result_pairs_chisq.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
}
}
}
library(tibble)
for (exp in exps) {
for (strain_tolerant in strains_tolerant) {
for (strain_sensitive in strains_sensitive) {
contingency_table <- read.table(paste0(strain_tolerant,"_vs_",strain_sensitive,".",exp,".tab"), row.names = 1, sep = "\t")
contingency_table <- contingency_table %>%
row_to_names(row_number = 1)
contingency_table<-mutate_all(contingency_table, function(x) as.numeric(as.character(x)))
print(chisq.test(contingency_table))
print(chisq.posthoc.test(contingency_table))
kk<-chisq.posthoc.test(contingency_table)
kk[kk$Value=="p values",c(3,4)] <- lapply(kk[kk$Value=="p values",c(3,4)], function(x) (p.adjust(x,method="bonferroni",n=54)))
#write.table(kk,"result_pairs_chisq.posthoc.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
table_comp<-data.frame(paste0(strain_tolerant," vs ",strain_sensitive," - ",exp),chisq.test(contingency_table)[c(1,3)])
colnames(table_comp)  <- c("Comparison","X-squared","p-value")
table_comp$`X-squared`  <- signif(table_comp$`X-squared`, digits=3)
table_comp$`p-value`  <- signif(table_comp$`p-value`, digits=3)
table_comp$`p-value` <- p.adjust(table_comp$`p-value`,method="bonferroni",n=9)
write.table(table_comp,"result_pairs_chisq.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
}
}
}
library(janitor)
for (exp in exps) {
for (strain_tolerant in strains_tolerant) {
for (strain_sensitive in strains_sensitive) {
contingency_table <- read.table(paste0(strain_tolerant,"_vs_",strain_sensitive,".",exp,".tab"), row.names = 1, sep = "\t")
contingency_table <- contingency_table %>%
row_to_names(row_number = 1)
contingency_table<-mutate_all(contingency_table, function(x) as.numeric(as.character(x)))
print(chisq.test(contingency_table))
print(chisq.posthoc.test(contingency_table))
kk<-chisq.posthoc.test(contingency_table)
kk[kk$Value=="p values",c(3,4)] <- lapply(kk[kk$Value=="p values",c(3,4)], function(x) (p.adjust(x,method="bonferroni",n=54)))
#write.table(kk,"result_pairs_chisq.posthoc.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
table_comp<-data.frame(paste0(strain_tolerant," vs ",strain_sensitive," - ",exp),chisq.test(contingency_table)[c(1,3)])
colnames(table_comp)  <- c("Comparison","X-squared","p-value")
table_comp$`X-squared`  <- signif(table_comp$`X-squared`, digits=3)
table_comp$`p-value`  <- signif(table_comp$`p-value`, digits=3)
table_comp$`p-value` <- p.adjust(table_comp$`p-value`,method="bonferroni",n=9)
write.table(table_comp,"result_pairs_chisq.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
}
}
}
library(chisq.posthoc.test)
for (exp in exps) {
for (strain_tolerant in strains_tolerant) {
for (strain_sensitive in strains_sensitive) {
contingency_table <- read.table(paste0(strain_tolerant,"_vs_",strain_sensitive,".",exp,".tab"), row.names = 1, sep = "\t")
contingency_table <- contingency_table %>%
row_to_names(row_number = 1)
contingency_table<-mutate_all(contingency_table, function(x) as.numeric(as.character(x)))
print(chisq.test(contingency_table))
print(chisq.posthoc.test(contingency_table))
kk<-chisq.posthoc.test(contingency_table)
kk[kk$Value=="p values",c(3,4)] <- lapply(kk[kk$Value=="p values",c(3,4)], function(x) (p.adjust(x,method="bonferroni",n=54)))
#write.table(kk,"result_pairs_chisq.posthoc.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
table_comp<-data.frame(paste0(strain_tolerant," vs ",strain_sensitive," - ",exp),chisq.test(contingency_table)[c(1,3)])
colnames(table_comp)  <- c("Comparison","X-squared","p-value")
table_comp$`X-squared`  <- signif(table_comp$`X-squared`, digits=3)
table_comp$`p-value`  <- signif(table_comp$`p-value`, digits=3)
table_comp$`p-value` <- p.adjust(table_comp$`p-value`,method="bonferroni",n=9)
write.table(table_comp,"result_pairs_chisq.BF.tab", col.names = T,append = T,quote = F, sep ="\t", row.names = F)
}
}
}
plot24h<- ggplot(FC[FC$time=="24h",], aes(x = strain, y = FC, fill = strain)) + geom_col() +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="24h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 16) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 24h copper treatment") +coord_cartesian( ylim=c(0,1.3),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
library(ggplot2)
plot24h<- ggplot(FC[FC$time=="24h",], aes(x = strain, y = FC, fill = strain)) + geom_col() +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="24h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 16) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 24h copper treatment") +coord_cartesian( ylim=c(0,1.3),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot40h<-ggplot(FC[FC$time=="40h",], aes(x = strain, y = FC, fill = strain)) + geom_col() +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="40h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 16) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 40h copper treatment") +coord_cartesian( ylim=c(0,1.3),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot_grid(plot24h,plot40h,nrow = 1)
library(cowplot)
plot_grid(plot24h,plot40h,nrow = 1)
setwd("~/WORK/llew/Dmelanogaster_Copper/feedingAnalysis")
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.png")
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.png",  device = 'png')
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.png",  device = 'svg')
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.png",  device = 'svg', width = 8)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.png",  device = 'svg', width = 12)
plot24h<- ggplot(FC[FC$time=="24h",], aes(x = strain, y = FC, fill = strain)) + geom_col() +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="24h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 16) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 24h copper treatment") +coord_cartesian( ylim=c(0,1.1),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot40h<-ggplot(FC[FC$time=="40h",], aes(x = strain, y = FC, fill = strain)) + geom_col() +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="40h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 16) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 40h copper treatment") +coord_cartesian( ylim=c(0,1.1),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot_grid(plot24h,plot40h,nrow = 1)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.png",  device = 'svg', width = 12)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.pdf",  device = 'svg', width = 12)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.svg",  device = 'svg', width = 12)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.png",  device = 'svg', width = 14)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.pdf",  device = 'svg', width = 14)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.svg",  device = 'svg', width = 14)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.pdf",  device = 'svg', width = 14)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.pdf",  device = 'pdf', width = 14)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.png",  type="cairo", width = 14)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.pdf",  device = 'pdf', width = 16)
plot24h<- ggplot(FC[FC$time=="24h",], aes(x = strain, y = FC, fill = strain)) + geom_col() +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="24h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 18) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 24h copper treatment") +coord_cartesian( ylim=c(0,1.1),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot40h<-ggplot(FC[FC$time=="40h",], aes(x = strain, y = FC, fill = strain)) + geom_col() +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="40h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 18) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 40h copper treatment") +coord_cartesian( ylim=c(0,1.1),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot_grid(plot24h,plot40h,nrow = 1)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.pdf",  device = 'pdf', width = 16)
plot24h<- ggplot(FC[FC$time=="24h",], aes(x = strain, y = FC, fill = strain)) + geom_col() +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="24h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 20) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 24h copper treatment") +coord_cartesian( ylim=c(0,1.1),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot40h<-ggplot(FC[FC$time=="40h",], aes(x = strain, y = FC, fill = strain)) + geom_col() +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="40h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 20) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 40h copper treatment") +coord_cartesian( ylim=c(0,1.1),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot_grid(plot24h,plot40h,nrow = 1)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.pdf",  device = 'pdf', width = 16)
plot24h<- ggplot(FC[FC$time=="24h",], aes(x = strain, y = FC, fill = strain)) + geom_col(color=black) +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="24h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 20) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 24h copper treatment") +coord_cartesian( ylim=c(0,1.1),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot40h<-ggplot(FC[FC$time=="40h",], aes(x = strain, y = FC, fill = strain)) + geom_col(color=black) +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="40h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 20) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 40h copper treatment") +coord_cartesian( ylim=c(0,1.1),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot_grid(plot24h,plot40h,nrow = 1)
plot24h<- ggplot(FC[FC$time=="24h",], aes(x = strain, y = FC, fill = strain)) + geom_col(color="black") +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="24h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 20) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 24h copper treatment") +coord_cartesian( ylim=c(0,1.1),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot40h<-ggplot(FC[FC$time=="40h",], aes(x = strain, y = FC, fill = strain)) + geom_col(color="black") +
scale_fill_manual(values=color_map) +
geom_errorbar(data = FC[FC$time=="40h",], aes(x=strain, ymin = FC-(FC*stdev),
ymax = FC+(FC*stdev)),
width=.2, position=position_dodge(.9)) +
theme_classic(base_size = 20) + labs(fill="Strain",x="",y="Fold-change consumption",title="Feeding: 40h copper treatment") +coord_cartesian( ylim=c(0,1.1),xlim=c(-0.1,7), expand = FALSE ) + theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
plot_grid(plot24h,plot40h,nrow = 1)
ggsave(plot_grid(plot24h,plot40h,nrow = 1),filename = "fig5B.pdf",  device = 'pdf', width = 16)
dataFeeding %>% filter(status=="control") %>% group_by(strain,time)
dataFeeding
tmp
